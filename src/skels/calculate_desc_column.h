/*
 * File automatically generated by
 * gengen 1.4.3rc by Lorenzo Bettini 
 * http://www.gnu.org/software/gengen
 */

#ifndef CALCULATE_DESC_COLUMN_GEN_CLASS_H
#define CALCULATE_DESC_COLUMN_GEN_CLASS_H

#include <string>
#include <iostream>

using std::string;
using std::ostream;

class calculate_desc_column_gen_class
{
 protected:
  string array;
  bool epilogue;
  int index;
  int max_desc_column;
  int param_padding;

 public:
  calculate_desc_column_gen_class() :
    epilogue (false), index (0), max_desc_column (0), param_padding (0)
  {
  }
  
  calculate_desc_column_gen_class(const string &_array, bool _epilogue, int _index, int _max_desc_column, int _param_padding) :
    array (_array), epilogue (_epilogue), index (_index), max_desc_column (_max_desc_column), param_padding (_param_padding)
  {
  }

  static void
  generate_string(const string &s, ostream &stream, unsigned int indent)
  {
    if (!indent || s.find('\n') == string::npos)
      {
        stream << s;
        return;
      }

    string::size_type pos;
    string::size_type start = 0;
    string ind (indent, ' ');
    while ( (pos=s.find('\n', start)) != string::npos)
      {
        stream << s.substr (start, (pos+1)-start);
        start = pos+1;
        if (start+1 <= s.size ())
          stream << ind;
      }
    if (start+1 <= s.size ())
      stream << s.substr (start);
  }

  void set_array(const string &_array)
  {
    array = _array;
  }

  void set_epilogue(bool _epilogue)
  {
    epilogue = _epilogue;
  }

  void set_index(int _index)
  {
    index = _index;
  }

  void set_max_desc_column(int _max_desc_column)
  {
    max_desc_column = _max_desc_column;
  }

  void set_param_padding(int _param_padding)
  {
    param_padding = _param_padding;
  }

  void generate_calculate_desc_column(ostream &stream, unsigned int indent = 0);
  
};

#endif // CALCULATE_DESC_COLUMN_GEN_CLASS_H
