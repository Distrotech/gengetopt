/*
 * File automatically generated by
 * gengen 1.4.3rc by Lorenzo Bettini 
 * http://www.gnu.org/software/gengen
 */

#ifndef INIT_ARGS_INFO_GEN_CLASS_H
#define INIT_ARGS_INFO_GEN_CLASS_H

#include <string>
#include <iostream>

using std::string;
using std::ostream;

class init_args_info_gen_class
{
 protected:
  int desc_idx;
  string help_strings;
  string max;
  string min;
  bool multiple;
  int param_idx;
  string var_arg;

 public:
  init_args_info_gen_class() :
    desc_idx (0), multiple (false), param_idx (0)
  {
  }
  
  init_args_info_gen_class(int _desc_idx, const string &_help_strings, const string &_max, const string &_min, bool _multiple, int _param_idx, const string &_var_arg) :
    desc_idx (_desc_idx), help_strings (_help_strings), max (_max), min (_min), multiple (_multiple), param_idx (_param_idx), var_arg (_var_arg)
  {
  }

  static void
  generate_string(const string &s, ostream &stream, unsigned int indent)
  {
    if (!indent || s.find('\n') == string::npos)
      {
        stream << s;
        return;
      }

    string::size_type pos;
    string::size_type start = 0;
    string ind (indent, ' ');
    while ( (pos=s.find('\n', start)) != string::npos)
      {
        stream << s.substr (start, (pos+1)-start);
        start = pos+1;
        if (start+1 <= s.size ())
          stream << ind;
      }
    if (start+1 <= s.size ())
      stream << s.substr (start);
  }

  void set_desc_idx(int _desc_idx)
  {
    desc_idx = _desc_idx;
  }

  void set_help_strings(const string &_help_strings)
  {
    help_strings = _help_strings;
  }

  void set_max(const string &_max)
  {
    max = _max;
  }

  void set_min(const string &_min)
  {
    min = _min;
  }

  void set_multiple(bool _multiple)
  {
    multiple = _multiple;
  }

  void set_param_idx(int _param_idx)
  {
    param_idx = _param_idx;
  }

  void set_var_arg(const string &_var_arg)
  {
    var_arg = _var_arg;
  }

  void generate_init_args_info(ostream &stream, unsigned int indent = 0);
  
};

#endif // INIT_ARGS_INFO_GEN_CLASS_H
