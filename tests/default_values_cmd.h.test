/* default_values_cmd.h */

/* File autogenerated by gengetopt   */

#ifndef DEFAULT_VALUES_CMD_H
#define DEFAULT_VALUES_CMD_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef DEFAULT_VALUES_CMD_PARSER_PACKAGE
#define DEFAULT_VALUES_CMD_PARSER_PACKAGE "default_values"
#endif

#ifndef DEFAULT_VALUES_CMD_PARSER_VERSION
#define DEFAULT_VALUES_CMD_PARSER_VERSION "1.0"
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  int foo_arg;	/* foo option (default='15000').  */
  char * foo_orig;	/* foo option original value given at command line.  */
  const char *foo_help; /* foo option help description.  */
  char * bar_arg;	/* bar option (default='this is a default').  */
  char * bar_orig;	/* bar option original value given at command line.  */
  const char *bar_help; /* bar option help description.  */
  int foo_opt_arg;	/* foo option with optional arg (default='15000').  */
  char * foo_opt_orig;	/* foo option with optional arg original value given at command line.  */
  const char *foo_opt_help; /* foo option with optional arg help description.  */
  char * bar_opt_arg;	/* bar option with optional arg (default='this is a default').  */
  char * bar_opt_orig;	/* bar option with optional arg original value given at command line.  */
  const char *bar_opt_help; /* bar option with optional arg help description.  */
  float foofloat_arg;	/* foo float option (default='15000').  */
  char * foofloat_orig;	/* foo float option original value given at command line.  */
  const char *foofloat_help; /* foo float option help description.  */
  double foodouble_arg;	/* foo double option (default='15000').  */
  char * foodouble_orig;	/* foo double option original value given at command line.  */
  const char *foodouble_help; /* foo double option help description.  */
  double pi_arg;	/* PI option (default='3.1415926536').  */
  char * pi_orig;	/* PI option original value given at command line.  */
  const char *pi_help; /* PI option help description.  */
  int timeout_arg;	/* number of seconds after the scanning is cancelled if no progress is shown at all. (default='120').  */
  char * timeout_orig;	/* number of seconds after the scanning is cancelled if no progress is shown at all. original value given at command line.  */
  const char *timeout_help; /* number of seconds after the scanning is cancelled if no progress is shown at all. help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int foo_given ;	/* Whether foo was given.  */
  int bar_given ;	/* Whether bar was given.  */
  int foo_opt_given ;	/* Whether foo-opt was given.  */
  int bar_opt_given ;	/* Whether bar-opt was given.  */
  int foofloat_given ;	/* Whether foofloat was given.  */
  int foodouble_given ;	/* Whether foodouble was given.  */
  int pi_given ;	/* Whether pi was given.  */
  int timeout_given ;	/* Whether timeout was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int default_values_cmd_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int default_values_cmd_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int default_values_cmd_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void default_values_cmd_parser_print_help(void);
void default_values_cmd_parser_print_version(void);

void default_values_cmd_parser_init (struct gengetopt_args_info *args_info);
void default_values_cmd_parser_free (struct gengetopt_args_info *args_info);

int default_values_cmd_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* DEFAULT_VALUES_CMD_H */
