/* test_multiple_cmd.h */

/* File autogenerated by gengetopt   */

#ifndef TEST_MULTIPLE_CMD_H
#define TEST_MULTIPLE_CMD_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef TEST_MULTIPLE_CMD_PARSER_PACKAGE
#define TEST_MULTIPLE_CMD_PARSER_PACKAGE "test_multiple"
#endif

#ifndef TEST_MULTIPLE_CMD_PARSER_VERSION
#define TEST_MULTIPLE_CMD_PARSER_VERSION "1.0"
#endif

struct gengetopt_args_info
{
  char ** string_arg;	/* string option (default='foo').  */
  char ** string_orig;	/* string option original value given at command line.  */
  int* int_arg;	/* int option.  */
  char ** int_orig;	/* int option original value given at command line.  */
  short* short_arg;	/* short option.  */
  char ** short_orig;	/* short option original value given at command line.  */
  long* long_arg;	/* long option.  */
  char ** long_orig;	/* long option original value given at command line.  */
  float* float_arg;	/* float option (default='15000').  */
  char ** float_orig;	/* float option original value given at command line.  */
  char ** no_short_opt_arg;	/* string option with no short.  */
  char ** no_short_opt_orig;	/* string option with no short original value given at command line.  */
  char ** optarg_arg;	/* multi with optional args.  */
  char ** optarg_orig;	/* multi with optional args original value given at command line.  */
  char ** optarg_noshort_arg;	/* multi with optional args and no short.  */
  char ** optarg_noshort_orig;	/* multi with optional args and no short original value given at command line.  */
  char * file_save_arg;	/* save the passed options into a file.  */
  char * file_save_orig;	/* save the passed options into a file original value given at command line.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  unsigned int string_given ;	/* Whether string was given.  */
  unsigned int int_given ;	/* Whether int was given.  */
  unsigned int short_given ;	/* Whether short was given.  */
  unsigned int long_given ;	/* Whether long was given.  */
  unsigned int float_given ;	/* Whether float was given.  */
  unsigned int no_short_opt_given ;	/* Whether no-short-opt was given.  */
  unsigned int noarg_given ;	/* Whether noarg was given.  */
  unsigned int noarg_noshort_given ;	/* Whether noarg-noshort was given.  */
  unsigned int optarg_given ;	/* Whether optarg was given.  */
  unsigned int optarg_noshort_given ;	/* Whether optarg-noshort was given.  */
  int file_save_given ;	/* Whether file-save was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

int test_multiple_cmd_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);
int test_multiple_cmd_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);
int test_multiple_cmd_parser_file_save(const char *filename, struct gengetopt_args_info *args_info);

void test_multiple_cmd_parser_print_help(void);
void test_multiple_cmd_parser_print_version(void);

void test_multiple_cmd_parser_init (struct gengetopt_args_info *args_info);
void test_multiple_cmd_parser_free (struct gengetopt_args_info *args_info);

int test_multiple_cmd_parser_required (struct gengetopt_args_info *args_info, const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TEST_MULTIPLE_CMD_H */
