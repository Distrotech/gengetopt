/* test_second_cmdline_cmd.h */

/* File autogenerated by gengetopt   */

#ifndef TEST_SECOND_CMDLINE_CMD_H
#define TEST_SECOND_CMDLINE_CMD_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef TEST_SECOND_CMDLINE_CMD_PARSER_PACKAGE
#define TEST_SECOND_CMDLINE_CMD_PARSER_PACKAGE PACKAGE
#endif

#ifndef TEST_SECOND_CMDLINE_CMD_PARSER_VERSION
#define TEST_SECOND_CMDLINE_CMD_PARSER_VERSION VERSION
#endif

struct test_second_cmdline_cmd_struct
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  char * option_a_arg;	/* option a of the second command line to parse.  */
  char * option_a_orig;	/* option a of the second command line to parse original value given at command line.  */
  const char *option_a_help; /* option a of the second command line to parse help description.  */
  char * option_b_arg;	/* option a of the second command line to parse.  */
  char * option_b_orig;	/* option a of the second command line to parse original value given at command line.  */
  const char *option_b_help; /* option a of the second command line to parse help description.  */
  char ** my_multi_arg;	/* multiple option of the second command line to parse.  */
  char ** my_multi_orig;	/* multiple option of the second command line to parse original value given at command line.  */
  int my_multi_min; /* multiple option of the second command line to parse's minimum occurreces */
  int my_multi_max; /* multiple option of the second command line to parse's maximum occurreces */
  const char *my_multi_help; /* multiple option of the second command line to parse help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int option_a_given ;	/* Whether option-a was given.  */
  int option_b_given ;	/* Whether option-b was given.  */
  unsigned int my_multi_given ;	/* Whether my-multi was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

extern const char *test_second_cmdline_cmd_struct_purpose;
extern const char *test_second_cmdline_cmd_struct_usage;
extern const char *test_second_cmdline_cmd_struct_help[];

int test_second_cmdline_cmd_parser (int argc, char * const *argv,
  struct test_second_cmdline_cmd_struct *args_info);
int test_second_cmdline_cmd_parser2 (int argc, char * const *argv,
  struct test_second_cmdline_cmd_struct *args_info,
  int override, int initialize, int check_required);
int test_second_cmdline_cmd_parser_file_save(const char *filename,
  struct test_second_cmdline_cmd_struct *args_info);

void test_second_cmdline_cmd_parser_print_help(void);
void test_second_cmdline_cmd_parser_print_version(void);

void test_second_cmdline_cmd_parser_init (struct test_second_cmdline_cmd_struct *args_info);
void test_second_cmdline_cmd_parser_free (struct test_second_cmdline_cmd_struct *args_info);

int test_second_cmdline_cmd_parser_string (const char *cmdline, struct test_second_cmdline_cmd_struct *args_info,
  const char *prog_name);
int test_second_cmdline_cmd_parser_string2 (const char *cmdline, struct test_second_cmdline_cmd_struct *args_info,
  const char *prog_name,
  int override, int initialize, int check_required);

int test_second_cmdline_cmd_parser_required (struct test_second_cmdline_cmd_struct *args_info,
  const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TEST_SECOND_CMDLINE_CMD_H */
