/* test_groups_cmd.h */

/* File autogenerated by gengetopt   */

#ifndef TEST_GROUPS_CMD_H
#define TEST_GROUPS_CMD_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef TEST_GROUPS_CMD_PARSER_PACKAGE
#define TEST_GROUPS_CMD_PARSER_PACKAGE "test_groups"
#endif

#ifndef TEST_GROUPS_CMD_PARSER_VERSION
#define TEST_GROUPS_CMD_PARSER_VERSION "1.0"
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  int opta_min; /* string a's minimum occurreces */
  int opta_max; /* string a's maximum occurreces */
  const char *opta_help; /* string a help description.  */
  char * optA_arg;	/* string A.  */
  char * optA_orig;	/* string A original value given at command line.  */
  const char *optA_help; /* string A help description.  */
  char ** optAmul_arg;	/* string M.  */
  char ** optAmul_orig;	/* string M original value given at command line.  */
  int optAmul_min; /* string M's minimum occurreces */
  int optAmul_max; /* string M's maximum occurreces */
  const char *optAmul_help; /* string M help description.  */
  const char *optb_help; /* string b help description.  */
  const char *optc_help; /* string c help description.  */
  const char *optd_help; /* string d help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  unsigned int opta_given ;	/* Whether opta was given.  */
  int opta_group ; /* Whether opta's was updated.  */
  int optA_given ;	/* Whether optA was given.  */
  unsigned int optAmul_given ;	/* Whether optAmul was given.  */
  int optAmul_group ; /* Whether optAmul's was updated.  */
  int optb_given ;	/* Whether optb was given.  */
  int optc_given ;	/* Whether optc was given.  */
  int optd_given ;	/* Whether optd was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
  int grp1_group_counter; /* counter for group grp1 */
  int my_grp2_group_counter; /* counter for group my_grp2 */
} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int test_groups_cmd_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int test_groups_cmd_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int test_groups_cmd_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void test_groups_cmd_parser_print_help(void);
void test_groups_cmd_parser_print_version(void);

void test_groups_cmd_parser_init (struct gengetopt_args_info *args_info);
void test_groups_cmd_parser_free (struct gengetopt_args_info *args_info);

int test_groups_cmd_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TEST_GROUPS_CMD_H */
