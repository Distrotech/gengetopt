/* test_conf_parser_cmd.h */

/* File autogenerated by gengetopt   */

#ifndef TEST_CONF_PARSER_CMD_H
#define TEST_CONF_PARSER_CMD_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef TEST_CONF_PARSER_CMD_PARSER_PACKAGE
#define TEST_CONF_PARSER_CMD_PARSER_PACKAGE "test_conf_parser"
#endif

#ifndef TEST_CONF_PARSER_CMD_PARSER_VERSION
#define TEST_CONF_PARSER_CMD_PARSER_VERSION "1.0"
#endif

struct my_args_info
{
  char * opta_arg;	/* string a.  */
  char * opta_orig;	/* string a original value given at command line.  */
  char * optb_arg;	/* string b.  */
  char * optb_orig;	/* string b original value given at command line.  */
  char * string_arg;	/* string option.  */
  char * string_orig;	/* string option original value given at command line.  */
  int int_arg;	/* int option.  */
  char * int_orig;	/* int option original value given at command line.  */
  short short_arg;	/* short option.  */
  char * short_orig;	/* short option original value given at command line.  */
  long long_arg;	/* long option.  */
  char * long_orig;	/* long option original value given at command line.  */
  float float_arg;	/* float option.  */
  char * float_orig;	/* float option original value given at command line.  */
  double double_arg;	/* double option.  */
  char * double_orig;	/* double option original value given at command line.  */
  long double longdouble_arg;	/* longdouble option.  */
  char * longdouble_orig;	/* longdouble option original value given at command line.  */
  #ifdef HAVE_LONG_LONG
  long long int longlong_arg;	/* longlong option.  */
  #else
  long longlong_arg;	/* longlong option.  */
  #endif
  char * longlong_orig;	/* longlong option original value given at command line.  */
  int flag_flag;	/* flag option (default=on).  */
  char * required_arg;	/* required option.  */
  char * required_orig;	/* required option original value given at command line.  */
  char * conf_file_arg;	/* config file (default='test_conf.conf').  */
  char * conf_file_orig;	/* config file original value given at command line.  */
  char ** multi_string_arg;	/* multiple string option.  */
  char ** multi_string_orig;	/* multiple string option original value given at command line.  */
  char ** multi_string_def_arg;	/* multiple string option with default (default='this default').  */
  char ** multi_string_def_orig;	/* multiple string option with default original value given at command line.  */
  char * opt_arg_arg;	/* option with optional arg.  */
  char * opt_arg_orig;	/* option with optional arg original value given at command line.  */
  char * file_save_arg;	/* save the passed options into a file.  */
  char * file_save_orig;	/* save the passed options into a file original value given at command line.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int opta_given ;	/* Whether opta was given.  */
  int optb_given ;	/* Whether optb was given.  */
  int optc_given ;	/* Whether optc was given.  */
  int optd_given ;	/* Whether optd was given.  */
  int string_given ;	/* Whether string was given.  */
  int int_given ;	/* Whether int was given.  */
  int short_given ;	/* Whether short was given.  */
  int long_given ;	/* Whether long was given.  */
  int float_given ;	/* Whether float was given.  */
  int double_given ;	/* Whether double was given.  */
  int longdouble_given ;	/* Whether longdouble was given.  */
  int longlong_given ;	/* Whether longlong was given.  */
  int flag_given ;	/* Whether flag was given.  */
  int function_given ;	/* Whether function was given.  */
  int no_short_given ;	/* Whether no-short was given.  */
  int required_given ;	/* Whether required was given.  */
  int conf_file_given ;	/* Whether conf-file was given.  */
  unsigned int multi_string_given ;	/* Whether multi-string was given.  */
  unsigned int multi_string_def_given ;	/* Whether multi-string-def was given.  */
  unsigned int noarg_given ;	/* Whether noarg was given.  */
  unsigned int noarg_noshort_given ;	/* Whether noarg-noshort was given.  */
  int opt_arg_given ;	/* Whether opt-arg was given.  */
  int file_save_given ;	/* Whether file-save was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
  int grp1_group_counter; /* counter for group grp1 */
  int my_grp2_group_counter; /* counter for group my_grp2 */
} ;

int test_conf_parser_cmd_parser (int argc, char * const *argv, struct my_args_info *args_info);
int test_conf_parser_cmd_parser2 (int argc, char * const *argv, struct my_args_info *args_info, int override, int initialize, int check_required);
int test_conf_parser_cmd_parser_file_save(const char *filename, struct my_args_info *args_info);

void test_conf_parser_cmd_parser_print_help(void);
void test_conf_parser_cmd_parser_print_version(void);

void test_conf_parser_cmd_parser_init (struct my_args_info *args_info);
void test_conf_parser_cmd_parser_free (struct my_args_info *args_info);

int test_conf_parser_cmd_parser_configfile (char * const filename, struct my_args_info *args_info, int override, int initialize, int check_required);

int test_conf_parser_cmd_parser_required (struct my_args_info *args_info, const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TEST_CONF_PARSER_CMD_H */
